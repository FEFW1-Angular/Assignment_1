{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/product.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nclass AdminProductEditComponent {\n  constructor(productService, route, formBuilder) {\n    this.productService = productService;\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.productForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(4)]],\n      price: [0]\n    });\n    this.route.paramMap.subscribe(param => {\n      const id = Number(param.get('id'));\n      this.productService.getProductById(id).subscribe(product => {\n        this.product = product;\n        // set giá trị từ API vào input form\n        this.productForm.patchValue({\n          name: product.name,\n          price: product.price\n        });\n      }, error => console.log(error.message));\n    });\n  }\n  onHandleUpdate() {\n    // kiểm tra nếu form hợp lệ \n    if (this.productForm.valid) {\n      const newProduct = {\n        id: this.product.id,\n        name: this.productForm.value.name || \"\",\n        price: this.productForm.value.price || 0\n      };\n      this.productService.updateProduct(newProduct).subscribe(product => {\n        console.log(product);\n      });\n    }\n  }\n}\nAdminProductEditComponent.ɵfac = function AdminProductEditComponent_Factory(t) {\n  return new (t || AdminProductEditComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nAdminProductEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminProductEditComponent,\n  selectors: [[\"app-admin-product-edit\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[\"role\", \"alert\", 1, \"alert\", \"alert-warning\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"T\\u00EAn\", 1, \"form-control\"], [\"type\", \"number\", \"formControlName\", \"price\", \"placeholder\", \"Gi\\u00E1\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"img\", \"placeholder\", \"\\u1EA2nh\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"bg-block\", \"btn-lg\"]],\n  template: function AdminProductEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \" C\\u1EACP NH\\u1EACT S\\u1EA2N PH\\u1EA8M\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminProductEditComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onHandleUpdate();\n      });\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 2);\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2);\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 6);\n      i0.ɵɵtext(10, \" S\\u1EEDa \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AdminProductEditComponent };","map":{"version":3,"names":["Validators","AdminProductEditComponent","constructor","productService","route","formBuilder","productForm","group","name","required","minLength","price","paramMap","subscribe","param","id","Number","get","getProductById","product","patchValue","error","console","log","message","onHandleUpdate","valid","newProduct","value","updateProduct","i0","ɵɵdirectiveInject","i1","ProductService","i2","ActivatedRoute","i3","FormBuilder","selectors","decls","vars","consts","template","AdminProductEditComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AdminProductEditComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\ducph\\OneDrive\\Desktop\\FPT Polytechnic\\Angular\\Assignment\\Assignment1\\src\\app\\page\\admin\\admin-product-edit\\admin-product-edit.component.ts","C:\\Users\\ducph\\OneDrive\\Desktop\\FPT Polytechnic\\Angular\\Assignment\\Assignment1\\src\\app\\page\\admin\\admin-product-edit\\admin-product-edit.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IProduct } from 'src/app/interfaces/Product';\r\nimport { ProductService } from 'src/app/services/product.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin-product-edit',\r\n  templateUrl: './admin-product-edit.component.html',\r\n  styleUrls: ['./admin-product-edit.component.scss']\r\n})\r\nexport class AdminProductEditComponent {\r\n  // product: IProduct = {\r\n  //   name: \"\",\r\n  //   price: 0,\r\n  //   img: \"\"\r\n  // }\r\n  // constructor(\r\n  //   private productService: ProductService,\r\n  //   private route: ActivatedRoute) {\r\n  //   this.route.paramMap.subscribe(param => {\r\n  //     const id = Number(param.get('id'));\r\n  //     this.productService.getProductById(id).subscribe(product => {\r\n  //       this.product = product;\r\n  //     }, error => console.log(error.message))\r\n  //   })\r\n  // }\r\n  // onHandleUpdate() {\r\n  //   this.productService.updateProduct(this.product).subscribe(product => {\r\n  //     console.log(product)\r\n  //   })\r\n  // }\r\n\r\n  product!: IProduct;\r\n  productForm = this.formBuilder.group({\r\n    name: ['', [Validators.required, Validators.minLength(4)]],\r\n    price: [0,],\r\n  })\r\n  constructor(\r\n    private productService: ProductService,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder) {\r\n    this.route.paramMap.subscribe(param => {\r\n      const id = Number(param.get('id'));\r\n      this.productService.getProductById(id).subscribe(product => {\r\n        this.product = product;\r\n        // set giá trị từ API vào input form\r\n        this.productForm.patchValue({\r\n          name: product.name,\r\n          price: product.price\r\n        })\r\n      }, error => console.log(error.message))\r\n    })\r\n  }\r\n  onHandleUpdate() {\r\n    // kiểm tra nếu form hợp lệ \r\n    if (this.productForm.valid) {\r\n      const newProduct: IProduct = {\r\n        id: this.product.id,\r\n        name: this.productForm.value.name || \"\",\r\n        price: this.productForm.value.price || 0,\r\n      }\r\n      this.productService.updateProduct(newProduct).subscribe(product => {\r\n        console.log(product)\r\n      })\r\n    }\r\n  }\r\n}\r\n","<div class=\"alert alert-warning\" role=\"alert\">\r\n    CẬP NHẬT SẢN PHẨM\r\n</div>\r\n<form (ngSubmit)=\"onHandleUpdate()\" [formGroup]=\"productForm\">\r\n    <div class=\"mb-3\">\r\n        <input type=\"text\" formControlName=\"name\" placeholder=\"Tên\" class=\"form-control\" />\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <input type=\"number\" formControlName=\"price\" placeholder=\"Giá\" class=\"form-control\" />\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <input type=\"text\" formControlName=\"img\" placeholder=\"Ảnh\" class=\"form-control\" />\r\n    </div>\r\n\r\n    <button type=\"submit\" class=\"btn btn-primary bg-block btn-lg\">\r\n        Sửa\r\n    </button>\r\n</form>"],"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;AAMxD,MAKaC,yBAAyB;EA2BpCC,YACUC,cAA8B,EAC9BC,KAAqB,EACrBC,WAAwB;IAFxB,KAAAF,cAAc,GAAdA,cAAc;IACd,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,WAAW,GAAXA,WAAW;IAPrB,KAAAC,WAAW,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACnCC,IAAI,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1DC,KAAK,EAAE,CAAC,CAAC;KACV,CAAC;IAKA,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAACC,SAAS,CAACC,KAAK,IAAG;MACpC,MAAMC,EAAE,GAAGC,MAAM,CAACF,KAAK,CAACG,GAAG,CAAC,IAAI,CAAC,CAAC;MAClC,IAAI,CAACd,cAAc,CAACe,cAAc,CAACH,EAAE,CAAC,CAACF,SAAS,CAACM,OAAO,IAAG;QACzD,IAAI,CAACA,OAAO,GAAGA,OAAO;QACtB;QACA,IAAI,CAACb,WAAW,CAACc,UAAU,CAAC;UAC1BZ,IAAI,EAAEW,OAAO,CAACX,IAAI;UAClBG,KAAK,EAAEQ,OAAO,CAACR;SAChB,CAAC;MACJ,CAAC,EAAEU,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC,CAAC;IACzC,CAAC,CAAC;EACJ;EACAC,cAAcA,CAAA;IACZ;IACA,IAAI,IAAI,CAACnB,WAAW,CAACoB,KAAK,EAAE;MAC1B,MAAMC,UAAU,GAAa;QAC3BZ,EAAE,EAAE,IAAI,CAACI,OAAO,CAACJ,EAAE;QACnBP,IAAI,EAAE,IAAI,CAACF,WAAW,CAACsB,KAAK,CAACpB,IAAI,IAAI,EAAE;QACvCG,KAAK,EAAE,IAAI,CAACL,WAAW,CAACsB,KAAK,CAACjB,KAAK,IAAI;OACxC;MACD,IAAI,CAACR,cAAc,CAAC0B,aAAa,CAACF,UAAU,CAAC,CAACd,SAAS,CAACM,OAAO,IAAG;QAChEG,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;MACtB,CAAC,CAAC;;EAEN;;AAvDWlB,yBAAyB,C;mBAAzBA,yBAAyB,EAAA6B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;AAAA;AAAzBpC,yBAAyB,C;QAAzBA,yBAAyB;EAAAqC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZtCd,EAAA,CAAAgB,cAAA,aAA8C;MAC1ChB,EAAA,CAAAiB,MAAA,+CACJ;MAAAjB,EAAA,CAAAkB,YAAA,EAAM;MACNlB,EAAA,CAAAgB,cAAA,cAA8D;MAAxDhB,EAAA,CAAAmB,UAAA,sBAAAC,4DAAA;QAAA,OAAYL,GAAA,CAAApB,cAAA,EAAgB;MAAA,EAAC;MAC/BK,EAAA,CAAAgB,cAAA,aAAkB;MACdhB,EAAA,CAAAqB,SAAA,eAAmF;MACvFrB,EAAA,CAAAkB,YAAA,EAAM;MACNlB,EAAA,CAAAgB,cAAA,aAAkB;MACdhB,EAAA,CAAAqB,SAAA,eAAsF;MAC1FrB,EAAA,CAAAkB,YAAA,EAAM;MACNlB,EAAA,CAAAgB,cAAA,aAAkB;MACdhB,EAAA,CAAAqB,SAAA,eAAkF;MACtFrB,EAAA,CAAAkB,YAAA,EAAM;MAENlB,EAAA,CAAAgB,cAAA,gBAA8D;MAC1DhB,EAAA,CAAAiB,MAAA,kBACJ;MAAAjB,EAAA,CAAAkB,YAAA,EAAS;;;MAbuBlB,EAAA,CAAAsB,SAAA,GAAyB;MAAzBtB,EAAA,CAAAuB,UAAA,cAAAR,GAAA,CAAAvC,WAAA,CAAyB;;;;;;SDShDL,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}