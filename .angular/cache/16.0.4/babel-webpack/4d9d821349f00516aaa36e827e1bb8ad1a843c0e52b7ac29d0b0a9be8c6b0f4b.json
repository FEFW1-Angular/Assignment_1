{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductService {\n  constructor(http) {\n    this.http = http;\n  }\n  getProducts() {\n    return this.http.get(`http://localhost:8080/api/products`);\n  }\n  deleteProduct(_id) {\n    return this.http.delete(`http://localhost:8080/api/products/${_id}`);\n  }\n  getProductById(_id) {\n    return this.http.get(`http://localhost:8080/api/products/${_id}`);\n  }\n  addProduct(product) {\n    return this.http.post(`http://localhost:8080/api/products`, product);\n  }\n  updateProduct(product) {\n    return this.http.patch(`http://localhost:8080/api/products/${product._id}`, product);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProductService };","map":{"version":3,"names":["ProductService","constructor","http","getProducts","get","deleteProduct","_id","delete","getProductById","addProduct","product","post","updateProduct","patch","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ducph\\OneDrive\\Desktop\\FPT Polytechnic\\Angular\\Assignment\\Assignment1\\src\\app\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IProduct } from '../interfaces/Product';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n   getProducts(): Observable<IProduct[]> {\r\n    return this.http.get<IProduct[]>(`http://localhost:8080/api/products`);\r\n  };\r\n\r\n  deleteProduct(_id: number): Observable<IProduct[]> {\r\n    return this.http.delete<IProduct[]>(`http://localhost:8080/api/products/${_id}`,);\r\n  }\r\n  getProductById(_id: number): Observable<IProduct> {\r\n    return this.http.get<IProduct>(`http://localhost:8080/api/products/${_id}`);\r\n  }\r\n  addProduct(product: IProduct): Observable<IProduct> {\r\n    return this.http.post<IProduct>(`http://localhost:8080/api/products`, product);\r\n  }\r\n  updateProduct(product : any): Observable<IProduct> {\r\n    return this.http.patch<IProduct>(`http://localhost:8080/api/products/${product._id}`, product);\r\n  }\r\n}\r\n"],"mappings":";;AAMA,MAGaA,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EACtCC,WAAWA,CAAA;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,oCAAoC,CAAC;EACxE;EAEAC,aAAaA,CAACC,GAAW;IACvB,OAAO,IAAI,CAACJ,IAAI,CAACK,MAAM,CAAa,sCAAsCD,GAAG,EAAE,CAAE;EACnF;EACAE,cAAcA,CAACF,GAAW;IACxB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAW,sCAAsCE,GAAG,EAAE,CAAC;EAC7E;EACAG,UAAUA,CAACC,OAAiB;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAW,oCAAoC,EAAED,OAAO,CAAC;EAChF;EACAE,aAAaA,CAACF,OAAa;IACzB,OAAO,IAAI,CAACR,IAAI,CAACW,KAAK,CAAW,sCAAsCH,OAAO,CAACJ,GAAG,EAAE,EAAEI,OAAO,CAAC;EAChG;;AAlBWV,cAAc,C;mBAAdA,cAAc,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdjB,cAAc,C;SAAdA,cAAc;EAAAkB,OAAA,EAAdlB,cAAc,CAAAmB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPpB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}