{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CategoryService {\n  constructor(http) {\n    this.http = http;\n  }\n  //Category\n  getCategorys() {\n    return this.http.get(`http://localhost:3000/categorys`);\n  }\n  deleteCategory(id) {\n    return this.http.delete(`http://localhost:3000/categorys/${id}`);\n  }\n  getCategoryById(id) {\n    return this.http.get(`http://localhost:3000/categorys/${id}`);\n  }\n  addCategory(category) {\n    return this.http.post(`http://localhost:3000/categorys`, category);\n  }\n  updateCategory(category) {\n    return this.http.patch(`http://localhost:3000/categorys/${category.id}`, category);\n  }\n}\nCategoryService.ɵfac = function CategoryService_Factory(t) {\n  return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n};\nCategoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategoryService,\n  factory: CategoryService.ɵfac,\n  providedIn: 'root'\n});\nexport { CategoryService };","map":{"version":3,"names":["CategoryService","constructor","http","getCategorys","get","deleteCategory","id","delete","getCategoryById","addCategory","category","post","updateCategory","patch","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ducph\\OneDrive\\Desktop\\FPT Polytechnic\\Angular\\Assignment\\Assignment1\\src\\app\\services\\category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { ICategory } from '../interfaces/Category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private http: HttpClient) {}\n  //Category\n  getCategorys(): Observable<ICategory[]> {\n    return this.http.get<ICategory[]>(`http://localhost:3000/categorys`);\n  };\n\n  deleteCategory(id: number): Observable<ICategory[]> {\n    return this.http.delete<ICategory[]>(`http://localhost:3000/categorys/${id}`,);\n  }\n  getCategoryById(id: number): Observable<ICategory> {\n    return this.http.get<ICategory>(`http://localhost:3000/categorys/${id}`);\n  }\n  addCategory(category: ICategory): Observable<ICategory> {\n    return this.http.post<ICategory>(`http://localhost:3000/categorys`, category);\n  }\n  updateCategory(category : any): Observable<ICategory> {\n    return this.http.patch<ICategory>(`http://localhost:3000/categorys/${category.id}`, category);\n  }\n}\n"],"mappings":";;AAKA,MAGaA,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EACvC;EACAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAc,iCAAiC,CAAC;EACtE;EAEAC,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACJ,IAAI,CAACK,MAAM,CAAc,mCAAmCD,EAAE,EAAE,CAAE;EAChF;EACAE,eAAeA,CAACF,EAAU;IACxB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAY,mCAAmCE,EAAE,EAAE,CAAC;EAC1E;EACAG,WAAWA,CAACC,QAAmB;IAC7B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAY,iCAAiC,EAAED,QAAQ,CAAC;EAC/E;EACAE,cAAcA,CAACF,QAAc;IAC3B,OAAO,IAAI,CAACR,IAAI,CAACW,KAAK,CAAY,mCAAmCH,QAAQ,CAACJ,EAAE,EAAE,EAAEI,QAAQ,CAAC;EAC/F;;AAnBWV,eAAe,C;mBAAfA,eAAe,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfjB,eAAe,C;SAAfA,eAAe;EAAAkB,OAAA,EAAflB,eAAe,CAAAmB,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPpB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}